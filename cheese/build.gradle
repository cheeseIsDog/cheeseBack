
buildscript {
    ext {
        queryDslVersion = "4.4.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'cheese'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java'

    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation group: 'com.querydsl', name: 'querydsl-jpa', version: queryDslVersion
    implementation group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion
    implementation group: 'com.querydsl', name: 'querydsl-core', version: queryDslVersion

    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion
    annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: queryDslVersion, classifier: 'jpa'
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compile "org.springframework.boot:spring-boot-starter-mail"


    //log4j 취약점 대응
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.17.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.17.1'
}

test {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated')
}
//def querydslDir = "$buildDir/generated/querydsl"
//
//querydsl {
//    jpa = true
//    querydslSourcesDir = querydslDir
//}
//sourceSets {
//    main.java.srcDir querydslDir
//}
//
//compileQuerydsl{
//    options.annotationProcessorPath = configurations.querydsl
//}
//
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//    querydsl.extendsFrom compileClasspath
//}
